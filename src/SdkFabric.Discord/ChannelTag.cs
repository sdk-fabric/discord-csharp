/**
 * ChannelTag automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */


using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using RestSharp;
using Sdkgen.Client;
using Sdkgen.Client.Exception;

namespace SdkFabric.Discord;

public class ChannelTag : TagAbstract {
    public ChannelTag(RestClient httpClient, Parser parser): base(httpClient, parser)
    {
    }

    public ChannelMessageTag Message()
    {
        return new ChannelMessageTag(
            this.HttpClient,
            this.Parser
        );
    }


    /**
     * Returns all pinned messages in the channel as an array of message objects.
     */
    public async Task<List<Message>> GetPins(string channelId)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("channel_id", channelId);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/channels/:channel_id/pins", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<List<Message>>(response.Content);
        }

        if (response.ErrorException != null)
        {
            throw new ClientException("An unknown error occurred: " + response.ErrorException.Message, response.ErrorException);
        }

        throw (int) response.StatusCode switch
        {
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }


}
