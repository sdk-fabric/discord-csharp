/**
 * ChannelTag automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */


using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using RestSharp;
using Sdkgen.Client;
using Sdkgen.Client.Exception;

namespace SdkFabric.Discord;

public class ChannelTag : TagAbstract {
    public ChannelTag(RestClient httpClient, Parser parser): base(httpClient, parser)
    {
    }


    /**
     * Get a channel by ID. Returns a channel object.
     */
    public async Task<Channel> Get(string channelId)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("channel_id", channelId);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/channels/:channel_id", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);


        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            var data = this.Parser.Parse<Channel>(response.Content);

            return data;
        }

        var statusCode = (int) response.StatusCode;
        if (statusCode == 400)
        {
            var data = this.Parser.Parse<Error>(response.Content);

            throw new ErrorException(data);
        }

        if (statusCode == 404)
        {
            var data = this.Parser.Parse<Error>(response.Content);

            throw new ErrorException(data);
        }

        if (statusCode == 500)
        {
            var data = this.Parser.Parse<Error>(response.Content);

            throw new ErrorException(data);
        }

        throw new UnknownStatusCodeException("The server returned an unknown status code: " + statusCode);
    }
    /**
     * Returns all pinned messages in the channel as an array of message objects.
     */
    public async Task<System.Collections.Generic.List<Message>> GetPins(string channelId)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("channel_id", channelId);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/channels/:channel_id/pins", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);


        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            var data = this.Parser.Parse<System.Collections.Generic.List<Message>>(response.Content);

            return data;
        }

        var statusCode = (int) response.StatusCode;
        if (statusCode == 400)
        {
            var data = this.Parser.Parse<Error>(response.Content);

            throw new ErrorException(data);
        }

        if (statusCode == 404)
        {
            var data = this.Parser.Parse<Error>(response.Content);

            throw new ErrorException(data);
        }

        if (statusCode == 500)
        {
            var data = this.Parser.Parse<Error>(response.Content);

            throw new ErrorException(data);
        }

        throw new UnknownStatusCodeException("The server returned an unknown status code: " + statusCode);
    }


}
